{"version":3,"file":"static/js/807.70bad20e.chunk.js","mappings":"mRAUA,MAiFA,EAjFcA,KACV,MAAOC,EAASC,IAAcC,EAAAA,EAAAA,WAAS,GACjCC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MA2BjB,OAZAC,EAAAA,EAAAA,YAAU,KACNC,EAAAA,GAAaC,KAAK,CACdC,QAAS,+DACTC,SAAU,KACVC,YAAa,mGAEV,KAEHJ,EAAAA,GAAaK,SAAS,IAE3B,KAGCC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAACC,UAAU,wBAAuBC,UACrCH,EAAAA,EAAAA,KAAA,OAAKE,UAAU,QAAOC,UAClBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,aAAYC,SAAA,EACvBH,EAAAA,EAAAA,KAAA,MAAAG,SAAI,0CACJH,EAAAA,EAAAA,KAACK,EAAAA,EAAO,KACRD,EAAAA,EAAAA,MAACE,EAAAA,EAAI,CAACC,SA/BDC,IACjBC,QAAQC,IAAIF,GACZjB,GAASoB,EAAAA,EAAAA,IAAS,kCAClBxB,GAAW,GAEXyB,YAAW,KACPzB,GAAW,GACXS,EAAAA,GAAQiB,QAAQ,4BAChBxB,EAAS,IAAI,GACd,KAAK,EAsBkCyB,gBAAgB,SAAQX,SAAA,EAClDH,EAAAA,EAAAA,KAACM,EAAAA,EAAKS,KAAI,CACNC,KAAK,WACLC,MAAO,CACH,CACIC,UAAU,EACVtB,QAAS,yCAEfO,UAEFH,EAAAA,EAAAA,KAACmB,EAAAA,EAAK,CACFC,QAAQpB,EAAAA,EAAAA,KAACqB,EAAAA,EAAY,CAACC,MAAO,CAAEC,MAAO,qBACtCC,YAAY,0BAKpBxB,EAAAA,EAAAA,KAACM,EAAAA,EAAKS,KAAI,CACNC,KAAK,WACLC,MAAO,CACH,CACIC,UAAU,EACVtB,QAAS,mCAEfO,UAEFH,EAAAA,EAAAA,KAACmB,EAAAA,EAAMM,SAAQ,CACXL,QAAQpB,EAAAA,EAAAA,KAAC0B,EAAAA,EAAY,CAACJ,MAAO,CAAEC,MAAO,qBACtCC,YAAY,oBAKpBxB,EAAAA,EAAAA,KAACM,EAAAA,EAAKS,KAAI,CAAAZ,UACNH,EAAAA,EAAAA,KAAC2B,EAAAA,GAAM,CAACC,KAAK,UAAUC,SAAS,SAAS3B,UAAU,oBAAoBhB,QAASA,EAAQiB,SAAC,4BAOpG,C","sources":["views/Login/Login.jsx"],"sourcesContent":["\r\n\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Layout, Input, Form, Button, Divider, message, notification } from 'antd'\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\nimport './login.scss'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { setToken } from '@/store/user';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst Login = () => {\r\n    const [loading, setLoading] = useState(false)\r\n    const navigate = useNavigate()\r\n    const dispatch = useDispatch()\r\n\r\n    const handleSubmit = value => {\r\n        console.log(value)\r\n        dispatch(setToken('haohaoxuexitiantianxiangshang'))\r\n        setLoading(true)\r\n        // 模拟异步登录\r\n        setTimeout(() => {\r\n            setLoading(false)\r\n            message.success('登录成功')\r\n            navigate('/')\r\n        }, 1500)\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        notification.open({\r\n            message: '欢迎使用后台管理平台',\r\n            duration: null,\r\n            description: '账号随意 密码随意 只进行了required判断'\r\n        })\r\n        return () => {\r\n            //清除副作用\r\n            notification.destroy()\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <Layout className='login animated fadeIn'>\r\n            <div className='model'>\r\n                <div className='login-form'>\r\n                    <h3>后台管理系统</h3>\r\n                    <Divider />\r\n                    <Form onFinish={handleSubmit} validateTrigger=\"onBlur\">\r\n                        <Form.Item\r\n                            name='username'\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: '请输入用户名',\r\n                                },\r\n                            ]}>\r\n\r\n                            <Input\r\n                                prefix={<UserOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                placeholder='用户名'\r\n\r\n                            />\r\n\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name='password'\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: '请输入密码',\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Input.Password\r\n                                prefix={<LockOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                placeholder='密码'\r\n\r\n                            />\r\n\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            <Button type='primary' htmlType='submit' className='login-form-button' loading={loading}>\r\n                                登录\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Login\r\n\r\n"],"names":["Login","loading","setLoading","useState","navigate","useNavigate","dispatch","useDispatch","useEffect","notification","open","message","duration","description","destroy","_jsx","Layout","className","children","_jsxs","Divider","Form","onFinish","value","console","log","setToken","setTimeout","success","validateTrigger","Item","name","rules","required","Input","prefix","UserOutlined","style","color","placeholder","Password","LockOutlined","Button","type","htmlType"],"sourceRoot":""}